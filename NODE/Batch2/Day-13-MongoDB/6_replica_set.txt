mkdir -p /srv/mongodb/rs0-0  /srv/mongodb/rs0-1 /srv/mongodb/rs0-2

--start the instances
mongod --replSet rs0 --port 27017 --bind_ip localhost  --dbpath /srv/mongodb/rs0-0 --smallfiles --oplogSize 128

mongod --replSet rs0 --port 27018 --bind_ip localhost  --dbpath /srv/mongodb/rs0-1 --smallfiles --oplogSize 128

mongod --replSet rs0 --port 27019 --bind_ip localhost  --dbpath /srv/mongodb/rs0-2 --smallfiles --oplogSize 128

# connect to one of the instances
mongo --port 27017

# create the replica replSet
rsconf = {
  _id: "rs0",
  members: [
    {
     _id: 0,
     host: "localhost:27017"
    },
    {
     _id: 1,
     host: "localhost:27018"
    },
    {
     _id: 2,
     host: "localhost:27019"
    },
    { _id: 4, 
    host: "localhost:27020", arbiterOnly: true }
   ]
}

rs.addArb("localhost:27017")

rs.add( { host: "localhost:27017", priority: 0, votes: 0 } )

var cfg = rs.conf();
cfg.members[4].priority = 1
cfg.members[4].votes = 1
rs.reconfig(cfg)

# Initialize the replica replSet
rs.initiate( rsconf )

# remove a members
rs.remove("mongod3.example.net:27017")

cfg = rs.conf()
cfg.members.splice(2,1)

# replace a member in replicaset
cfg = rs.conf()
cfg.members[0].host = "mongo2.example.net"
rs.reconfig(cfg)

rs.conf()

rs.addArb("localhost:27019")

10.10.200.1    mongodb01.yourdomain.com mongodb01
10.10.200.2    mongodb02.yourdomain.com mongodb02
10.10.200.3    mongodb03.yourdomain.com mongodb03

// To give name to replicaset
replSet=rs0

//intiate the replicaset
rs.initiate()

rs.conf()
{
    "_id" : "rs0",
    "version" : 1,
    "members" : [
        {
            "_id" : 0,
            "host" : "mongodb01.yourdomain.com:27017"
        }
    ]
}

rs.add("mongodb02.yourdomain.com")
rs.add("mongodb03.yourdomain.com")

// checkstatus
rs.status()

rs.addArb("arbiter01.yourdomain.com:27017")